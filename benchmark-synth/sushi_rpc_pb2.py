# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sushi_rpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sushi_rpc.proto',
  package='sushi_rpc',
  syntax='proto3',
  serialized_pb=_b('\n\x0fsushi_rpc.proto\x12\tsushi_rpc\"\x12\n\x10GenericVoidValue\"\"\n\x11GenericFloatValue\x12\r\n\x05value\x18\x01 \x01(\x02\" \n\x0fGenericIntValue\x12\r\n\x05value\x18\x01 \x01(\x05\"!\n\x10GenericBoolValue\x12\r\n\x05value\x18\x01 \x01(\x08\"#\n\x12GenericStringValue\x12\r\n\x05value\x18\x01 \x01(\t\"\x1d\n\x0fTrackIdentifier\x12\n\n\x02id\x18\x01 \x01(\x05\"!\n\x13ProcessorIdentifier\x12\n\n\x02id\x18\x01 \x01(\x05\"A\n\x13ParameterIdentifier\x12\x14\n\x0cprocessor_id\x18\x01 \x01(\x05\x12\x14\n\x0cparameter_id\x18\x02 \x01(\x05\"\x95\x01\n\rParameterType\x12+\n\x04type\x18\x01 \x01(\x0e\x32\x1d.sushi_rpc.ParameterType.Type\"W\n\x04Type\x12\t\n\x05\x44UMMY\x10\x00\x12\x08\n\x04\x42OOL\x10\x01\x12\x07\n\x03INT\x10\x02\x12\t\n\x05\x46LOAT\x10\x03\x12\x13\n\x0fSTRING_PROPERTY\x10\x04\x12\x11\n\rDATA_PROPERTY\x10\x05\"t\n\x0bPlayingMode\x12)\n\x04mode\x18\x01 \x01(\x0e\x32\x1b.sushi_rpc.PlayingMode.Mode\":\n\x04Mode\x12\t\n\x05\x44UMMY\x10\x00\x12\x0b\n\x07STOPPED\x10\x01\x12\x0b\n\x07PLAYING\x10\x02\x12\r\n\tRECORDING\x10\x03\"g\n\x08SyncMode\x12&\n\x04mode\x18\x01 \x01(\x0e\x32\x18.sushi_rpc.SyncMode.Mode\"3\n\x04Mode\x12\t\n\x05\x44UMMY\x10\x00\x12\x0c\n\x08INTERNAL\x10\x01\x12\x08\n\x04MIDI\x10\x02\x12\x08\n\x04LINK\x10\x03\"7\n\rTimeSignature\x12\x11\n\tnumerator\x18\x01 \x01(\x05\x12\x13\n\x0b\x64\x65nominator\x18\x02 \x01(\x05\"7\n\nCpuTimings\x12\x0f\n\x07\x61verage\x18\x01 \x01(\x02\x12\x0b\n\x03min\x18\x02 \x01(\x02\x12\x0b\n\x03max\x18\x03 \x01(\x02\"k\n\rNoteOnRequest\x12)\n\x05track\x18\x01 \x01(\x0b\x32\x1a.sushi_rpc.TrackIdentifier\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\x05\x12\x0c\n\x04note\x18\x03 \x01(\x05\x12\x10\n\x08velocity\x18\x04 \x01(\x02\"l\n\x0eNoteOffRequest\x12)\n\x05track\x18\x01 \x01(\x0b\x32\x1a.sushi_rpc.TrackIdentifier\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\x05\x12\x0c\n\x04note\x18\x03 \x01(\x05\x12\x10\n\x08velocity\x18\x04 \x01(\x02\"p\n\x15NoteAftertouchRequest\x12)\n\x05track\x18\x01 \x01(\x0b\x32\x1a.sushi_rpc.TrackIdentifier\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\x05\x12\x0c\n\x04note\x18\x03 \x01(\x05\x12\r\n\x05value\x18\x04 \x01(\x02\"b\n\x15NoteModulationRequest\x12)\n\x05track\x18\x01 \x01(\x0b\x32\x1a.sushi_rpc.TrackIdentifier\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\x05\x12\r\n\x05value\x18\x03 \x01(\x02\"\xab\x01\n\tTrackInfo\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05label\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x16\n\x0einput_channels\x18\x04 \x01(\x05\x12\x14\n\x0cinput_busses\x18\x05 \x01(\x05\x12\x17\n\x0foutput_channels\x18\x06 \x01(\x05\x12\x15\n\routput_busses\x18\x07 \x01(\x05\x12\x17\n\x0fprocessor_count\x18\x08 \x01(\x05\"5\n\rTrackInfoList\x12$\n\x06tracks\x18\x01 \x03(\x0b\x32\x14.sushi_rpc.TrackInfo\"h\n\rProcessorInfo\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05label\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x17\n\x0fparameter_count\x18\x04 \x01(\x05\x12\x15\n\rprogram_count\x18\x05 \x01(\x05\"A\n\x11ProcessorInfoList\x12,\n\nprocessors\x18\x01 \x03(\x0b\x32\x18.sushi_rpc.ProcessorInfo\"$\n\x11ProgramIdentifier\x12\x0f\n\x07program\x18\x01 \x01(\x05\"`\n\x1aProcessorProgramIdentifier\x12\x31\n\tprocessor\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ProcessorIdentifier\x12\x0f\n\x07program\x18\x02 \x01(\x05\"E\n\x0bProgramInfo\x12(\n\x02id\x18\x01 \x01(\x0b\x32\x1c.sushi_rpc.ProgramIdentifier\x12\x0c\n\x04name\x18\x02 \x01(\t\";\n\x0fProgramInfoList\x12(\n\x08programs\x18\x01 \x03(\x0b\x32\x16.sushi_rpc.ProgramInfo\"~\n\x1aProcessorProgramSetRequest\x12\x31\n\tprocessor\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ProcessorIdentifier\x12-\n\x07program\x18\x02 \x01(\x0b\x32\x1c.sushi_rpc.ProgramIdentifier\"b\n\x1eProcessorBypassStateSetRequest\x12\x31\n\tprocessor\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ProcessorIdentifier\x12\r\n\x05value\x18\x02 \x01(\x08\"\xa9\x01\n\rParameterInfo\x12\n\n\x02id\x18\x01 \x01(\x05\x12&\n\x04type\x18\x02 \x01(\x0b\x32\x18.sushi_rpc.ParameterType\x12\r\n\x05label\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x0c\n\x04unit\x18\x05 \x01(\t\x12\x13\n\x0b\x61utomatable\x18\x06 \x01(\x08\x12\x11\n\tmin_range\x18\x07 \x01(\x02\x12\x11\n\tmax_range\x18\x08 \x01(\x02\"A\n\x11ParameterInfoList\x12,\n\nparameters\x18\x01 \x03(\x0b\x32\x18.sushi_rpc.ParameterInfo\"^\n\x12ParameterIdRequest\x12\x31\n\tprocessor\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ProcessorIdentifier\x12\x15\n\rParameterName\x18\x02 \x01(\t\"W\n\x13ParameterSetRequest\x12\x31\n\tparameter\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ParameterIdentifier\x12\r\n\x05value\x18\x02 \x01(\x02\"[\n\x18StringPropertySetRequest\x12\x30\n\x08property\x18\x01 \x01(\x0b\x32\x1e.sushi_rpc.ParameterIdentifier\x12\r\n\x05value\x18\x02 \x01(\t2\x87\x1d\n\x0fSushiController\x12L\n\rGetSamplerate\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x1c.sushi_rpc.GenericFloatValue\"\x00\x12G\n\x0eGetPlayingMode\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x16.sushi_rpc.PlayingMode\"\x00\x12G\n\x0eSetPlayingMode\x12\x16.sushi_rpc.PlayingMode\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12\x41\n\x0bGetSyncMode\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x13.sushi_rpc.SyncMode\"\x00\x12\x41\n\x0bSetSyncMode\x12\x13.sushi_rpc.SyncMode\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12G\n\x08GetTempo\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x1c.sushi_rpc.GenericFloatValue\"\x00\x12G\n\x08SetTempo\x12\x1c.sushi_rpc.GenericFloatValue\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12K\n\x10GetTimeSignature\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x18.sushi_rpc.TimeSignature\"\x00\x12K\n\x10SetTimeSignature\x12\x18.sushi_rpc.TimeSignature\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12\x44\n\tGetTracks\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x18.sushi_rpc.TrackInfoList\"\x00\x12\x45\n\nSendNoteOn\x12\x18.sushi_rpc.NoteOnRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12G\n\x0bSendNoteOff\x12\x19.sushi_rpc.NoteOffRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12U\n\x12SendNoteAftertouch\x12 .sushi_rpc.NoteAftertouchRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12Q\n\x0eSendAftertouch\x12 .sushi_rpc.NoteModulationRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12P\n\rSendPitchBend\x12 .sushi_rpc.NoteModulationRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12Q\n\x0eSendModulation\x12 .sushi_rpc.NoteModulationRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12H\n\x10GetEngineTimings\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x15.sushi_rpc.CpuTimings\"\x00\x12\x46\n\x0fGetTrackTimings\x12\x1a.sushi_rpc.TrackIdentifier\x1a\x15.sushi_rpc.CpuTimings\"\x00\x12N\n\x13GetProcessorTimings\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x15.sushi_rpc.CpuTimings\"\x00\x12M\n\x0fResetAllTimings\x12\x1b.sushi_rpc.GenericVoidValue\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12N\n\x11ResetTrackTimings\x12\x1a.sushi_rpc.TrackIdentifier\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12V\n\x15ResetProcessorTimings\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12I\n\nGetTrackId\x12\x1d.sushi_rpc.GenericStringValue\x1a\x1a.sushi_rpc.TrackIdentifier\"\x00\x12\x42\n\x0cGetTrackInfo\x12\x1a.sushi_rpc.TrackIdentifier\x1a\x14.sushi_rpc.TrackInfo\"\x00\x12P\n\x12GetTrackProcessors\x12\x1a.sushi_rpc.TrackIdentifier\x1a\x1c.sushi_rpc.ProcessorInfoList\"\x00\x12P\n\x12GetTrackParameters\x12\x1a.sushi_rpc.TrackIdentifier\x1a\x1c.sushi_rpc.ParameterInfoList\"\x00\x12Q\n\x0eGetProcessorId\x12\x1d.sushi_rpc.GenericStringValue\x1a\x1e.sushi_rpc.ProcessorIdentifier\"\x00\x12N\n\x10GetProcessorInfo\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x18.sushi_rpc.ProcessorInfo\"\x00\x12X\n\x17GetProcessorBypassState\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1b.sushi_rpc.GenericBoolValue\"\x00\x12\x63\n\x17SetProcessorBypassState\x12).sushi_rpc.ProcessorBypassStateSetRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12\\\n\x1aGetProcessorCurrentProgram\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1c.sushi_rpc.ProgramIdentifier\"\x00\x12\x61\n\x1eGetProcessorCurrentProgramName\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1d.sushi_rpc.GenericStringValue\"\x00\x12\x61\n\x17GetProcessorProgramName\x12%.sushi_rpc.ProcessorProgramIdentifier\x1a\x1d.sushi_rpc.GenericStringValue\"\x00\x12T\n\x14GetProcessorPrograms\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1a.sushi_rpc.ProgramInfoList\"\x00\x12[\n\x13SetProcessorProgram\x12%.sushi_rpc.ProcessorProgramSetRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12X\n\x16GetProcessorParameters\x12\x1e.sushi_rpc.ProcessorIdentifier\x1a\x1c.sushi_rpc.ParameterInfoList\"\x00\x12Q\n\x0eGetParameterId\x12\x1d.sushi_rpc.ParameterIdRequest\x1a\x1e.sushi_rpc.ParameterIdentifier\"\x00\x12N\n\x10GetParameterInfo\x12\x1e.sushi_rpc.ParameterIdentifier\x1a\x18.sushi_rpc.ParameterInfo\"\x00\x12S\n\x11GetParameterValue\x12\x1e.sushi_rpc.ParameterIdentifier\x1a\x1c.sushi_rpc.GenericFloatValue\"\x00\x12]\n\x1bGetParameterValueNormalised\x12\x1e.sushi_rpc.ParameterIdentifier\x1a\x1c.sushi_rpc.GenericFloatValue\"\x00\x12\\\n\x19GetParameterValueAsString\x12\x1e.sushi_rpc.ParameterIdentifier\x1a\x1d.sushi_rpc.GenericStringValue\"\x00\x12Y\n\x16GetStringPropertyValue\x12\x1e.sushi_rpc.ParameterIdentifier\x1a\x1d.sushi_rpc.GenericStringValue\"\x00\x12R\n\x11SetParameterValue\x12\x1e.sushi_rpc.ParameterSetRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12\\\n\x1bSetParameterValueNormalised\x12\x1e.sushi_rpc.ParameterSetRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x12\\\n\x16SetStringPropertyValue\x12#.sushi_rpc.StringPropertySetRequest\x1a\x1b.sushi_rpc.GenericVoidValue\"\x00\x62\x06proto3')
)



_PARAMETERTYPE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='sushi_rpc.ParameterType.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DUMMY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING_PROPERTY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_PROPERTY', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=388,
  serialized_end=475,
)
_sym_db.RegisterEnumDescriptor(_PARAMETERTYPE_TYPE)

_PLAYINGMODE_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='sushi_rpc.PlayingMode.Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DUMMY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLAYING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECORDING', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=535,
  serialized_end=593,
)
_sym_db.RegisterEnumDescriptor(_PLAYINGMODE_MODE)

_SYNCMODE_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='sushi_rpc.SyncMode.Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DUMMY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIDI', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINK', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=647,
  serialized_end=698,
)
_sym_db.RegisterEnumDescriptor(_SYNCMODE_MODE)


_GENERICVOIDVALUE = _descriptor.Descriptor(
  name='GenericVoidValue',
  full_name='sushi_rpc.GenericVoidValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=48,
)


_GENERICFLOATVALUE = _descriptor.Descriptor(
  name='GenericFloatValue',
  full_name='sushi_rpc.GenericFloatValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.GenericFloatValue.value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=84,
)


_GENERICINTVALUE = _descriptor.Descriptor(
  name='GenericIntValue',
  full_name='sushi_rpc.GenericIntValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.GenericIntValue.value', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=118,
)


_GENERICBOOLVALUE = _descriptor.Descriptor(
  name='GenericBoolValue',
  full_name='sushi_rpc.GenericBoolValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.GenericBoolValue.value', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=153,
)


_GENERICSTRINGVALUE = _descriptor.Descriptor(
  name='GenericStringValue',
  full_name='sushi_rpc.GenericStringValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.GenericStringValue.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=190,
)


_TRACKIDENTIFIER = _descriptor.Descriptor(
  name='TrackIdentifier',
  full_name='sushi_rpc.TrackIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.TrackIdentifier.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=192,
  serialized_end=221,
)


_PROCESSORIDENTIFIER = _descriptor.Descriptor(
  name='ProcessorIdentifier',
  full_name='sushi_rpc.ProcessorIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.ProcessorIdentifier.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=256,
)


_PARAMETERIDENTIFIER = _descriptor.Descriptor(
  name='ParameterIdentifier',
  full_name='sushi_rpc.ParameterIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processor_id', full_name='sushi_rpc.ParameterIdentifier.processor_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameter_id', full_name='sushi_rpc.ParameterIdentifier.parameter_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=323,
)


_PARAMETERTYPE = _descriptor.Descriptor(
  name='ParameterType',
  full_name='sushi_rpc.ParameterType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='sushi_rpc.ParameterType.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PARAMETERTYPE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=475,
)


_PLAYINGMODE = _descriptor.Descriptor(
  name='PlayingMode',
  full_name='sushi_rpc.PlayingMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='sushi_rpc.PlayingMode.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PLAYINGMODE_MODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=593,
)


_SYNCMODE = _descriptor.Descriptor(
  name='SyncMode',
  full_name='sushi_rpc.SyncMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='sushi_rpc.SyncMode.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SYNCMODE_MODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=595,
  serialized_end=698,
)


_TIMESIGNATURE = _descriptor.Descriptor(
  name='TimeSignature',
  full_name='sushi_rpc.TimeSignature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='numerator', full_name='sushi_rpc.TimeSignature.numerator', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='denominator', full_name='sushi_rpc.TimeSignature.denominator', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=700,
  serialized_end=755,
)


_CPUTIMINGS = _descriptor.Descriptor(
  name='CpuTimings',
  full_name='sushi_rpc.CpuTimings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='average', full_name='sushi_rpc.CpuTimings.average', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min', full_name='sushi_rpc.CpuTimings.min', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='sushi_rpc.CpuTimings.max', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=757,
  serialized_end=812,
)


_NOTEONREQUEST = _descriptor.Descriptor(
  name='NoteOnRequest',
  full_name='sushi_rpc.NoteOnRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='track', full_name='sushi_rpc.NoteOnRequest.track', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sushi_rpc.NoteOnRequest.channel', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='sushi_rpc.NoteOnRequest.note', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='velocity', full_name='sushi_rpc.NoteOnRequest.velocity', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=814,
  serialized_end=921,
)


_NOTEOFFREQUEST = _descriptor.Descriptor(
  name='NoteOffRequest',
  full_name='sushi_rpc.NoteOffRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='track', full_name='sushi_rpc.NoteOffRequest.track', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sushi_rpc.NoteOffRequest.channel', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='sushi_rpc.NoteOffRequest.note', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='velocity', full_name='sushi_rpc.NoteOffRequest.velocity', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=923,
  serialized_end=1031,
)


_NOTEAFTERTOUCHREQUEST = _descriptor.Descriptor(
  name='NoteAftertouchRequest',
  full_name='sushi_rpc.NoteAftertouchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='track', full_name='sushi_rpc.NoteAftertouchRequest.track', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sushi_rpc.NoteAftertouchRequest.channel', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='sushi_rpc.NoteAftertouchRequest.note', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.NoteAftertouchRequest.value', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1033,
  serialized_end=1145,
)


_NOTEMODULATIONREQUEST = _descriptor.Descriptor(
  name='NoteModulationRequest',
  full_name='sushi_rpc.NoteModulationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='track', full_name='sushi_rpc.NoteModulationRequest.track', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sushi_rpc.NoteModulationRequest.channel', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.NoteModulationRequest.value', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1147,
  serialized_end=1245,
)


_TRACKINFO = _descriptor.Descriptor(
  name='TrackInfo',
  full_name='sushi_rpc.TrackInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.TrackInfo.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='sushi_rpc.TrackInfo.label', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sushi_rpc.TrackInfo.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_channels', full_name='sushi_rpc.TrackInfo.input_channels', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_busses', full_name='sushi_rpc.TrackInfo.input_busses', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_channels', full_name='sushi_rpc.TrackInfo.output_channels', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_busses', full_name='sushi_rpc.TrackInfo.output_busses', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='processor_count', full_name='sushi_rpc.TrackInfo.processor_count', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1248,
  serialized_end=1419,
)


_TRACKINFOLIST = _descriptor.Descriptor(
  name='TrackInfoList',
  full_name='sushi_rpc.TrackInfoList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tracks', full_name='sushi_rpc.TrackInfoList.tracks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1421,
  serialized_end=1474,
)


_PROCESSORINFO = _descriptor.Descriptor(
  name='ProcessorInfo',
  full_name='sushi_rpc.ProcessorInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.ProcessorInfo.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='sushi_rpc.ProcessorInfo.label', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sushi_rpc.ProcessorInfo.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameter_count', full_name='sushi_rpc.ProcessorInfo.parameter_count', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='program_count', full_name='sushi_rpc.ProcessorInfo.program_count', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1476,
  serialized_end=1580,
)


_PROCESSORINFOLIST = _descriptor.Descriptor(
  name='ProcessorInfoList',
  full_name='sushi_rpc.ProcessorInfoList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processors', full_name='sushi_rpc.ProcessorInfoList.processors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1582,
  serialized_end=1647,
)


_PROGRAMIDENTIFIER = _descriptor.Descriptor(
  name='ProgramIdentifier',
  full_name='sushi_rpc.ProgramIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='program', full_name='sushi_rpc.ProgramIdentifier.program', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1649,
  serialized_end=1685,
)


_PROCESSORPROGRAMIDENTIFIER = _descriptor.Descriptor(
  name='ProcessorProgramIdentifier',
  full_name='sushi_rpc.ProcessorProgramIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processor', full_name='sushi_rpc.ProcessorProgramIdentifier.processor', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='program', full_name='sushi_rpc.ProcessorProgramIdentifier.program', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1687,
  serialized_end=1783,
)


_PROGRAMINFO = _descriptor.Descriptor(
  name='ProgramInfo',
  full_name='sushi_rpc.ProgramInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.ProgramInfo.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sushi_rpc.ProgramInfo.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1785,
  serialized_end=1854,
)


_PROGRAMINFOLIST = _descriptor.Descriptor(
  name='ProgramInfoList',
  full_name='sushi_rpc.ProgramInfoList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='programs', full_name='sushi_rpc.ProgramInfoList.programs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1856,
  serialized_end=1915,
)


_PROCESSORPROGRAMSETREQUEST = _descriptor.Descriptor(
  name='ProcessorProgramSetRequest',
  full_name='sushi_rpc.ProcessorProgramSetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processor', full_name='sushi_rpc.ProcessorProgramSetRequest.processor', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='program', full_name='sushi_rpc.ProcessorProgramSetRequest.program', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1917,
  serialized_end=2043,
)


_PROCESSORBYPASSSTATESETREQUEST = _descriptor.Descriptor(
  name='ProcessorBypassStateSetRequest',
  full_name='sushi_rpc.ProcessorBypassStateSetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processor', full_name='sushi_rpc.ProcessorBypassStateSetRequest.processor', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.ProcessorBypassStateSetRequest.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2045,
  serialized_end=2143,
)


_PARAMETERINFO = _descriptor.Descriptor(
  name='ParameterInfo',
  full_name='sushi_rpc.ParameterInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='sushi_rpc.ParameterInfo.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='sushi_rpc.ParameterInfo.type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='sushi_rpc.ParameterInfo.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='sushi_rpc.ParameterInfo.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unit', full_name='sushi_rpc.ParameterInfo.unit', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='automatable', full_name='sushi_rpc.ParameterInfo.automatable', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_range', full_name='sushi_rpc.ParameterInfo.min_range', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_range', full_name='sushi_rpc.ParameterInfo.max_range', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2146,
  serialized_end=2315,
)


_PARAMETERINFOLIST = _descriptor.Descriptor(
  name='ParameterInfoList',
  full_name='sushi_rpc.ParameterInfoList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameters', full_name='sushi_rpc.ParameterInfoList.parameters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2317,
  serialized_end=2382,
)


_PARAMETERIDREQUEST = _descriptor.Descriptor(
  name='ParameterIdRequest',
  full_name='sushi_rpc.ParameterIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processor', full_name='sushi_rpc.ParameterIdRequest.processor', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ParameterName', full_name='sushi_rpc.ParameterIdRequest.ParameterName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2384,
  serialized_end=2478,
)


_PARAMETERSETREQUEST = _descriptor.Descriptor(
  name='ParameterSetRequest',
  full_name='sushi_rpc.ParameterSetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameter', full_name='sushi_rpc.ParameterSetRequest.parameter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.ParameterSetRequest.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2480,
  serialized_end=2567,
)


_STRINGPROPERTYSETREQUEST = _descriptor.Descriptor(
  name='StringPropertySetRequest',
  full_name='sushi_rpc.StringPropertySetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='property', full_name='sushi_rpc.StringPropertySetRequest.property', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sushi_rpc.StringPropertySetRequest.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2569,
  serialized_end=2660,
)

_PARAMETERTYPE.fields_by_name['type'].enum_type = _PARAMETERTYPE_TYPE
_PARAMETERTYPE_TYPE.containing_type = _PARAMETERTYPE
_PLAYINGMODE.fields_by_name['mode'].enum_type = _PLAYINGMODE_MODE
_PLAYINGMODE_MODE.containing_type = _PLAYINGMODE
_SYNCMODE.fields_by_name['mode'].enum_type = _SYNCMODE_MODE
_SYNCMODE_MODE.containing_type = _SYNCMODE
_NOTEONREQUEST.fields_by_name['track'].message_type = _TRACKIDENTIFIER
_NOTEOFFREQUEST.fields_by_name['track'].message_type = _TRACKIDENTIFIER
_NOTEAFTERTOUCHREQUEST.fields_by_name['track'].message_type = _TRACKIDENTIFIER
_NOTEMODULATIONREQUEST.fields_by_name['track'].message_type = _TRACKIDENTIFIER
_TRACKINFOLIST.fields_by_name['tracks'].message_type = _TRACKINFO
_PROCESSORINFOLIST.fields_by_name['processors'].message_type = _PROCESSORINFO
_PROCESSORPROGRAMIDENTIFIER.fields_by_name['processor'].message_type = _PROCESSORIDENTIFIER
_PROGRAMINFO.fields_by_name['id'].message_type = _PROGRAMIDENTIFIER
_PROGRAMINFOLIST.fields_by_name['programs'].message_type = _PROGRAMINFO
_PROCESSORPROGRAMSETREQUEST.fields_by_name['processor'].message_type = _PROCESSORIDENTIFIER
_PROCESSORPROGRAMSETREQUEST.fields_by_name['program'].message_type = _PROGRAMIDENTIFIER
_PROCESSORBYPASSSTATESETREQUEST.fields_by_name['processor'].message_type = _PROCESSORIDENTIFIER
_PARAMETERINFO.fields_by_name['type'].message_type = _PARAMETERTYPE
_PARAMETERINFOLIST.fields_by_name['parameters'].message_type = _PARAMETERINFO
_PARAMETERIDREQUEST.fields_by_name['processor'].message_type = _PROCESSORIDENTIFIER
_PARAMETERSETREQUEST.fields_by_name['parameter'].message_type = _PARAMETERIDENTIFIER
_STRINGPROPERTYSETREQUEST.fields_by_name['property'].message_type = _PARAMETERIDENTIFIER
DESCRIPTOR.message_types_by_name['GenericVoidValue'] = _GENERICVOIDVALUE
DESCRIPTOR.message_types_by_name['GenericFloatValue'] = _GENERICFLOATVALUE
DESCRIPTOR.message_types_by_name['GenericIntValue'] = _GENERICINTVALUE
DESCRIPTOR.message_types_by_name['GenericBoolValue'] = _GENERICBOOLVALUE
DESCRIPTOR.message_types_by_name['GenericStringValue'] = _GENERICSTRINGVALUE
DESCRIPTOR.message_types_by_name['TrackIdentifier'] = _TRACKIDENTIFIER
DESCRIPTOR.message_types_by_name['ProcessorIdentifier'] = _PROCESSORIDENTIFIER
DESCRIPTOR.message_types_by_name['ParameterIdentifier'] = _PARAMETERIDENTIFIER
DESCRIPTOR.message_types_by_name['ParameterType'] = _PARAMETERTYPE
DESCRIPTOR.message_types_by_name['PlayingMode'] = _PLAYINGMODE
DESCRIPTOR.message_types_by_name['SyncMode'] = _SYNCMODE
DESCRIPTOR.message_types_by_name['TimeSignature'] = _TIMESIGNATURE
DESCRIPTOR.message_types_by_name['CpuTimings'] = _CPUTIMINGS
DESCRIPTOR.message_types_by_name['NoteOnRequest'] = _NOTEONREQUEST
DESCRIPTOR.message_types_by_name['NoteOffRequest'] = _NOTEOFFREQUEST
DESCRIPTOR.message_types_by_name['NoteAftertouchRequest'] = _NOTEAFTERTOUCHREQUEST
DESCRIPTOR.message_types_by_name['NoteModulationRequest'] = _NOTEMODULATIONREQUEST
DESCRIPTOR.message_types_by_name['TrackInfo'] = _TRACKINFO
DESCRIPTOR.message_types_by_name['TrackInfoList'] = _TRACKINFOLIST
DESCRIPTOR.message_types_by_name['ProcessorInfo'] = _PROCESSORINFO
DESCRIPTOR.message_types_by_name['ProcessorInfoList'] = _PROCESSORINFOLIST
DESCRIPTOR.message_types_by_name['ProgramIdentifier'] = _PROGRAMIDENTIFIER
DESCRIPTOR.message_types_by_name['ProcessorProgramIdentifier'] = _PROCESSORPROGRAMIDENTIFIER
DESCRIPTOR.message_types_by_name['ProgramInfo'] = _PROGRAMINFO
DESCRIPTOR.message_types_by_name['ProgramInfoList'] = _PROGRAMINFOLIST
DESCRIPTOR.message_types_by_name['ProcessorProgramSetRequest'] = _PROCESSORPROGRAMSETREQUEST
DESCRIPTOR.message_types_by_name['ProcessorBypassStateSetRequest'] = _PROCESSORBYPASSSTATESETREQUEST
DESCRIPTOR.message_types_by_name['ParameterInfo'] = _PARAMETERINFO
DESCRIPTOR.message_types_by_name['ParameterInfoList'] = _PARAMETERINFOLIST
DESCRIPTOR.message_types_by_name['ParameterIdRequest'] = _PARAMETERIDREQUEST
DESCRIPTOR.message_types_by_name['ParameterSetRequest'] = _PARAMETERSETREQUEST
DESCRIPTOR.message_types_by_name['StringPropertySetRequest'] = _STRINGPROPERTYSETREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GenericVoidValue = _reflection.GeneratedProtocolMessageType('GenericVoidValue', (_message.Message,), dict(
  DESCRIPTOR = _GENERICVOIDVALUE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.GenericVoidValue)
  ))
_sym_db.RegisterMessage(GenericVoidValue)

GenericFloatValue = _reflection.GeneratedProtocolMessageType('GenericFloatValue', (_message.Message,), dict(
  DESCRIPTOR = _GENERICFLOATVALUE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.GenericFloatValue)
  ))
_sym_db.RegisterMessage(GenericFloatValue)

GenericIntValue = _reflection.GeneratedProtocolMessageType('GenericIntValue', (_message.Message,), dict(
  DESCRIPTOR = _GENERICINTVALUE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.GenericIntValue)
  ))
_sym_db.RegisterMessage(GenericIntValue)

GenericBoolValue = _reflection.GeneratedProtocolMessageType('GenericBoolValue', (_message.Message,), dict(
  DESCRIPTOR = _GENERICBOOLVALUE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.GenericBoolValue)
  ))
_sym_db.RegisterMessage(GenericBoolValue)

GenericStringValue = _reflection.GeneratedProtocolMessageType('GenericStringValue', (_message.Message,), dict(
  DESCRIPTOR = _GENERICSTRINGVALUE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.GenericStringValue)
  ))
_sym_db.RegisterMessage(GenericStringValue)

TrackIdentifier = _reflection.GeneratedProtocolMessageType('TrackIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _TRACKIDENTIFIER,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.TrackIdentifier)
  ))
_sym_db.RegisterMessage(TrackIdentifier)

ProcessorIdentifier = _reflection.GeneratedProtocolMessageType('ProcessorIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORIDENTIFIER,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorIdentifier)
  ))
_sym_db.RegisterMessage(ProcessorIdentifier)

ParameterIdentifier = _reflection.GeneratedProtocolMessageType('ParameterIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERIDENTIFIER,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterIdentifier)
  ))
_sym_db.RegisterMessage(ParameterIdentifier)

ParameterType = _reflection.GeneratedProtocolMessageType('ParameterType', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERTYPE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterType)
  ))
_sym_db.RegisterMessage(ParameterType)

PlayingMode = _reflection.GeneratedProtocolMessageType('PlayingMode', (_message.Message,), dict(
  DESCRIPTOR = _PLAYINGMODE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.PlayingMode)
  ))
_sym_db.RegisterMessage(PlayingMode)

SyncMode = _reflection.GeneratedProtocolMessageType('SyncMode', (_message.Message,), dict(
  DESCRIPTOR = _SYNCMODE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.SyncMode)
  ))
_sym_db.RegisterMessage(SyncMode)

TimeSignature = _reflection.GeneratedProtocolMessageType('TimeSignature', (_message.Message,), dict(
  DESCRIPTOR = _TIMESIGNATURE,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.TimeSignature)
  ))
_sym_db.RegisterMessage(TimeSignature)

CpuTimings = _reflection.GeneratedProtocolMessageType('CpuTimings', (_message.Message,), dict(
  DESCRIPTOR = _CPUTIMINGS,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.CpuTimings)
  ))
_sym_db.RegisterMessage(CpuTimings)

NoteOnRequest = _reflection.GeneratedProtocolMessageType('NoteOnRequest', (_message.Message,), dict(
  DESCRIPTOR = _NOTEONREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.NoteOnRequest)
  ))
_sym_db.RegisterMessage(NoteOnRequest)

NoteOffRequest = _reflection.GeneratedProtocolMessageType('NoteOffRequest', (_message.Message,), dict(
  DESCRIPTOR = _NOTEOFFREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.NoteOffRequest)
  ))
_sym_db.RegisterMessage(NoteOffRequest)

NoteAftertouchRequest = _reflection.GeneratedProtocolMessageType('NoteAftertouchRequest', (_message.Message,), dict(
  DESCRIPTOR = _NOTEAFTERTOUCHREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.NoteAftertouchRequest)
  ))
_sym_db.RegisterMessage(NoteAftertouchRequest)

NoteModulationRequest = _reflection.GeneratedProtocolMessageType('NoteModulationRequest', (_message.Message,), dict(
  DESCRIPTOR = _NOTEMODULATIONREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.NoteModulationRequest)
  ))
_sym_db.RegisterMessage(NoteModulationRequest)

TrackInfo = _reflection.GeneratedProtocolMessageType('TrackInfo', (_message.Message,), dict(
  DESCRIPTOR = _TRACKINFO,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.TrackInfo)
  ))
_sym_db.RegisterMessage(TrackInfo)

TrackInfoList = _reflection.GeneratedProtocolMessageType('TrackInfoList', (_message.Message,), dict(
  DESCRIPTOR = _TRACKINFOLIST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.TrackInfoList)
  ))
_sym_db.RegisterMessage(TrackInfoList)

ProcessorInfo = _reflection.GeneratedProtocolMessageType('ProcessorInfo', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORINFO,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorInfo)
  ))
_sym_db.RegisterMessage(ProcessorInfo)

ProcessorInfoList = _reflection.GeneratedProtocolMessageType('ProcessorInfoList', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORINFOLIST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorInfoList)
  ))
_sym_db.RegisterMessage(ProcessorInfoList)

ProgramIdentifier = _reflection.GeneratedProtocolMessageType('ProgramIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _PROGRAMIDENTIFIER,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProgramIdentifier)
  ))
_sym_db.RegisterMessage(ProgramIdentifier)

ProcessorProgramIdentifier = _reflection.GeneratedProtocolMessageType('ProcessorProgramIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORPROGRAMIDENTIFIER,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorProgramIdentifier)
  ))
_sym_db.RegisterMessage(ProcessorProgramIdentifier)

ProgramInfo = _reflection.GeneratedProtocolMessageType('ProgramInfo', (_message.Message,), dict(
  DESCRIPTOR = _PROGRAMINFO,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProgramInfo)
  ))
_sym_db.RegisterMessage(ProgramInfo)

ProgramInfoList = _reflection.GeneratedProtocolMessageType('ProgramInfoList', (_message.Message,), dict(
  DESCRIPTOR = _PROGRAMINFOLIST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProgramInfoList)
  ))
_sym_db.RegisterMessage(ProgramInfoList)

ProcessorProgramSetRequest = _reflection.GeneratedProtocolMessageType('ProcessorProgramSetRequest', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORPROGRAMSETREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorProgramSetRequest)
  ))
_sym_db.RegisterMessage(ProcessorProgramSetRequest)

ProcessorBypassStateSetRequest = _reflection.GeneratedProtocolMessageType('ProcessorBypassStateSetRequest', (_message.Message,), dict(
  DESCRIPTOR = _PROCESSORBYPASSSTATESETREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ProcessorBypassStateSetRequest)
  ))
_sym_db.RegisterMessage(ProcessorBypassStateSetRequest)

ParameterInfo = _reflection.GeneratedProtocolMessageType('ParameterInfo', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERINFO,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterInfo)
  ))
_sym_db.RegisterMessage(ParameterInfo)

ParameterInfoList = _reflection.GeneratedProtocolMessageType('ParameterInfoList', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERINFOLIST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterInfoList)
  ))
_sym_db.RegisterMessage(ParameterInfoList)

ParameterIdRequest = _reflection.GeneratedProtocolMessageType('ParameterIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERIDREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterIdRequest)
  ))
_sym_db.RegisterMessage(ParameterIdRequest)

ParameterSetRequest = _reflection.GeneratedProtocolMessageType('ParameterSetRequest', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERSETREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.ParameterSetRequest)
  ))
_sym_db.RegisterMessage(ParameterSetRequest)

StringPropertySetRequest = _reflection.GeneratedProtocolMessageType('StringPropertySetRequest', (_message.Message,), dict(
  DESCRIPTOR = _STRINGPROPERTYSETREQUEST,
  __module__ = 'sushi_rpc_pb2'
  # @@protoc_insertion_point(class_scope:sushi_rpc.StringPropertySetRequest)
  ))
_sym_db.RegisterMessage(StringPropertySetRequest)



_SUSHICONTROLLER = _descriptor.ServiceDescriptor(
  name='SushiController',
  full_name='sushi_rpc.SushiController',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2663,
  serialized_end=6382,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetSamplerate',
    full_name='sushi_rpc.SushiController.GetSamplerate',
    index=0,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_GENERICFLOATVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPlayingMode',
    full_name='sushi_rpc.SushiController.GetPlayingMode',
    index=1,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_PLAYINGMODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetPlayingMode',
    full_name='sushi_rpc.SushiController.SetPlayingMode',
    index=2,
    containing_service=None,
    input_type=_PLAYINGMODE,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSyncMode',
    full_name='sushi_rpc.SushiController.GetSyncMode',
    index=3,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_SYNCMODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSyncMode',
    full_name='sushi_rpc.SushiController.SetSyncMode',
    index=4,
    containing_service=None,
    input_type=_SYNCMODE,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTempo',
    full_name='sushi_rpc.SushiController.GetTempo',
    index=5,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_GENERICFLOATVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetTempo',
    full_name='sushi_rpc.SushiController.SetTempo',
    index=6,
    containing_service=None,
    input_type=_GENERICFLOATVALUE,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTimeSignature',
    full_name='sushi_rpc.SushiController.GetTimeSignature',
    index=7,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_TIMESIGNATURE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetTimeSignature',
    full_name='sushi_rpc.SushiController.SetTimeSignature',
    index=8,
    containing_service=None,
    input_type=_TIMESIGNATURE,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTracks',
    full_name='sushi_rpc.SushiController.GetTracks',
    index=9,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_TRACKINFOLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendNoteOn',
    full_name='sushi_rpc.SushiController.SendNoteOn',
    index=10,
    containing_service=None,
    input_type=_NOTEONREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendNoteOff',
    full_name='sushi_rpc.SushiController.SendNoteOff',
    index=11,
    containing_service=None,
    input_type=_NOTEOFFREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendNoteAftertouch',
    full_name='sushi_rpc.SushiController.SendNoteAftertouch',
    index=12,
    containing_service=None,
    input_type=_NOTEAFTERTOUCHREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendAftertouch',
    full_name='sushi_rpc.SushiController.SendAftertouch',
    index=13,
    containing_service=None,
    input_type=_NOTEMODULATIONREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendPitchBend',
    full_name='sushi_rpc.SushiController.SendPitchBend',
    index=14,
    containing_service=None,
    input_type=_NOTEMODULATIONREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendModulation',
    full_name='sushi_rpc.SushiController.SendModulation',
    index=15,
    containing_service=None,
    input_type=_NOTEMODULATIONREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetEngineTimings',
    full_name='sushi_rpc.SushiController.GetEngineTimings',
    index=16,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_CPUTIMINGS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTrackTimings',
    full_name='sushi_rpc.SushiController.GetTrackTimings',
    index=17,
    containing_service=None,
    input_type=_TRACKIDENTIFIER,
    output_type=_CPUTIMINGS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorTimings',
    full_name='sushi_rpc.SushiController.GetProcessorTimings',
    index=18,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_CPUTIMINGS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ResetAllTimings',
    full_name='sushi_rpc.SushiController.ResetAllTimings',
    index=19,
    containing_service=None,
    input_type=_GENERICVOIDVALUE,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ResetTrackTimings',
    full_name='sushi_rpc.SushiController.ResetTrackTimings',
    index=20,
    containing_service=None,
    input_type=_TRACKIDENTIFIER,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ResetProcessorTimings',
    full_name='sushi_rpc.SushiController.ResetProcessorTimings',
    index=21,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTrackId',
    full_name='sushi_rpc.SushiController.GetTrackId',
    index=22,
    containing_service=None,
    input_type=_GENERICSTRINGVALUE,
    output_type=_TRACKIDENTIFIER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTrackInfo',
    full_name='sushi_rpc.SushiController.GetTrackInfo',
    index=23,
    containing_service=None,
    input_type=_TRACKIDENTIFIER,
    output_type=_TRACKINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTrackProcessors',
    full_name='sushi_rpc.SushiController.GetTrackProcessors',
    index=24,
    containing_service=None,
    input_type=_TRACKIDENTIFIER,
    output_type=_PROCESSORINFOLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTrackParameters',
    full_name='sushi_rpc.SushiController.GetTrackParameters',
    index=25,
    containing_service=None,
    input_type=_TRACKIDENTIFIER,
    output_type=_PARAMETERINFOLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorId',
    full_name='sushi_rpc.SushiController.GetProcessorId',
    index=26,
    containing_service=None,
    input_type=_GENERICSTRINGVALUE,
    output_type=_PROCESSORIDENTIFIER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorInfo',
    full_name='sushi_rpc.SushiController.GetProcessorInfo',
    index=27,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_PROCESSORINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorBypassState',
    full_name='sushi_rpc.SushiController.GetProcessorBypassState',
    index=28,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_GENERICBOOLVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetProcessorBypassState',
    full_name='sushi_rpc.SushiController.SetProcessorBypassState',
    index=29,
    containing_service=None,
    input_type=_PROCESSORBYPASSSTATESETREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorCurrentProgram',
    full_name='sushi_rpc.SushiController.GetProcessorCurrentProgram',
    index=30,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_PROGRAMIDENTIFIER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorCurrentProgramName',
    full_name='sushi_rpc.SushiController.GetProcessorCurrentProgramName',
    index=31,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_GENERICSTRINGVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorProgramName',
    full_name='sushi_rpc.SushiController.GetProcessorProgramName',
    index=32,
    containing_service=None,
    input_type=_PROCESSORPROGRAMIDENTIFIER,
    output_type=_GENERICSTRINGVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorPrograms',
    full_name='sushi_rpc.SushiController.GetProcessorPrograms',
    index=33,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_PROGRAMINFOLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetProcessorProgram',
    full_name='sushi_rpc.SushiController.SetProcessorProgram',
    index=34,
    containing_service=None,
    input_type=_PROCESSORPROGRAMSETREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProcessorParameters',
    full_name='sushi_rpc.SushiController.GetProcessorParameters',
    index=35,
    containing_service=None,
    input_type=_PROCESSORIDENTIFIER,
    output_type=_PARAMETERINFOLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParameterId',
    full_name='sushi_rpc.SushiController.GetParameterId',
    index=36,
    containing_service=None,
    input_type=_PARAMETERIDREQUEST,
    output_type=_PARAMETERIDENTIFIER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParameterInfo',
    full_name='sushi_rpc.SushiController.GetParameterInfo',
    index=37,
    containing_service=None,
    input_type=_PARAMETERIDENTIFIER,
    output_type=_PARAMETERINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParameterValue',
    full_name='sushi_rpc.SushiController.GetParameterValue',
    index=38,
    containing_service=None,
    input_type=_PARAMETERIDENTIFIER,
    output_type=_GENERICFLOATVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParameterValueNormalised',
    full_name='sushi_rpc.SushiController.GetParameterValueNormalised',
    index=39,
    containing_service=None,
    input_type=_PARAMETERIDENTIFIER,
    output_type=_GENERICFLOATVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParameterValueAsString',
    full_name='sushi_rpc.SushiController.GetParameterValueAsString',
    index=40,
    containing_service=None,
    input_type=_PARAMETERIDENTIFIER,
    output_type=_GENERICSTRINGVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetStringPropertyValue',
    full_name='sushi_rpc.SushiController.GetStringPropertyValue',
    index=41,
    containing_service=None,
    input_type=_PARAMETERIDENTIFIER,
    output_type=_GENERICSTRINGVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetParameterValue',
    full_name='sushi_rpc.SushiController.SetParameterValue',
    index=42,
    containing_service=None,
    input_type=_PARAMETERSETREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetParameterValueNormalised',
    full_name='sushi_rpc.SushiController.SetParameterValueNormalised',
    index=43,
    containing_service=None,
    input_type=_PARAMETERSETREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetStringPropertyValue',
    full_name='sushi_rpc.SushiController.SetStringPropertyValue',
    index=44,
    containing_service=None,
    input_type=_STRINGPROPERTYSETREQUEST,
    output_type=_GENERICVOIDVALUE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SUSHICONTROLLER)

DESCRIPTOR.services_by_name['SushiController'] = _SUSHICONTROLLER

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SushiControllerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetSamplerate = channel.unary_unary(
          '/sushi_rpc.SushiController/GetSamplerate',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=GenericFloatValue.FromString,
          )
      self.GetPlayingMode = channel.unary_unary(
          '/sushi_rpc.SushiController/GetPlayingMode',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=PlayingMode.FromString,
          )
      self.SetPlayingMode = channel.unary_unary(
          '/sushi_rpc.SushiController/SetPlayingMode',
          request_serializer=PlayingMode.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetSyncMode = channel.unary_unary(
          '/sushi_rpc.SushiController/GetSyncMode',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=SyncMode.FromString,
          )
      self.SetSyncMode = channel.unary_unary(
          '/sushi_rpc.SushiController/SetSyncMode',
          request_serializer=SyncMode.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetTempo = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTempo',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=GenericFloatValue.FromString,
          )
      self.SetTempo = channel.unary_unary(
          '/sushi_rpc.SushiController/SetTempo',
          request_serializer=GenericFloatValue.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetTimeSignature = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTimeSignature',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=TimeSignature.FromString,
          )
      self.SetTimeSignature = channel.unary_unary(
          '/sushi_rpc.SushiController/SetTimeSignature',
          request_serializer=TimeSignature.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetTracks = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTracks',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=TrackInfoList.FromString,
          )
      self.SendNoteOn = channel.unary_unary(
          '/sushi_rpc.SushiController/SendNoteOn',
          request_serializer=NoteOnRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SendNoteOff = channel.unary_unary(
          '/sushi_rpc.SushiController/SendNoteOff',
          request_serializer=NoteOffRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SendNoteAftertouch = channel.unary_unary(
          '/sushi_rpc.SushiController/SendNoteAftertouch',
          request_serializer=NoteAftertouchRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SendAftertouch = channel.unary_unary(
          '/sushi_rpc.SushiController/SendAftertouch',
          request_serializer=NoteModulationRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SendPitchBend = channel.unary_unary(
          '/sushi_rpc.SushiController/SendPitchBend',
          request_serializer=NoteModulationRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SendModulation = channel.unary_unary(
          '/sushi_rpc.SushiController/SendModulation',
          request_serializer=NoteModulationRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetEngineTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/GetEngineTimings',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=CpuTimings.FromString,
          )
      self.GetTrackTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTrackTimings',
          request_serializer=TrackIdentifier.SerializeToString,
          response_deserializer=CpuTimings.FromString,
          )
      self.GetProcessorTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorTimings',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=CpuTimings.FromString,
          )
      self.ResetAllTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/ResetAllTimings',
          request_serializer=GenericVoidValue.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.ResetTrackTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/ResetTrackTimings',
          request_serializer=TrackIdentifier.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.ResetProcessorTimings = channel.unary_unary(
          '/sushi_rpc.SushiController/ResetProcessorTimings',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetTrackId = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTrackId',
          request_serializer=GenericStringValue.SerializeToString,
          response_deserializer=TrackIdentifier.FromString,
          )
      self.GetTrackInfo = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTrackInfo',
          request_serializer=TrackIdentifier.SerializeToString,
          response_deserializer=TrackInfo.FromString,
          )
      self.GetTrackProcessors = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTrackProcessors',
          request_serializer=TrackIdentifier.SerializeToString,
          response_deserializer=ProcessorInfoList.FromString,
          )
      self.GetTrackParameters = channel.unary_unary(
          '/sushi_rpc.SushiController/GetTrackParameters',
          request_serializer=TrackIdentifier.SerializeToString,
          response_deserializer=ParameterInfoList.FromString,
          )
      self.GetProcessorId = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorId',
          request_serializer=GenericStringValue.SerializeToString,
          response_deserializer=ProcessorIdentifier.FromString,
          )
      self.GetProcessorInfo = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorInfo',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=ProcessorInfo.FromString,
          )
      self.GetProcessorBypassState = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorBypassState',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=GenericBoolValue.FromString,
          )
      self.SetProcessorBypassState = channel.unary_unary(
          '/sushi_rpc.SushiController/SetProcessorBypassState',
          request_serializer=ProcessorBypassStateSetRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetProcessorCurrentProgram = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorCurrentProgram',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=ProgramIdentifier.FromString,
          )
      self.GetProcessorCurrentProgramName = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorCurrentProgramName',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=GenericStringValue.FromString,
          )
      self.GetProcessorProgramName = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorProgramName',
          request_serializer=ProcessorProgramIdentifier.SerializeToString,
          response_deserializer=GenericStringValue.FromString,
          )
      self.GetProcessorPrograms = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorPrograms',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=ProgramInfoList.FromString,
          )
      self.SetProcessorProgram = channel.unary_unary(
          '/sushi_rpc.SushiController/SetProcessorProgram',
          request_serializer=ProcessorProgramSetRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.GetProcessorParameters = channel.unary_unary(
          '/sushi_rpc.SushiController/GetProcessorParameters',
          request_serializer=ProcessorIdentifier.SerializeToString,
          response_deserializer=ParameterInfoList.FromString,
          )
      self.GetParameterId = channel.unary_unary(
          '/sushi_rpc.SushiController/GetParameterId',
          request_serializer=ParameterIdRequest.SerializeToString,
          response_deserializer=ParameterIdentifier.FromString,
          )
      self.GetParameterInfo = channel.unary_unary(
          '/sushi_rpc.SushiController/GetParameterInfo',
          request_serializer=ParameterIdentifier.SerializeToString,
          response_deserializer=ParameterInfo.FromString,
          )
      self.GetParameterValue = channel.unary_unary(
          '/sushi_rpc.SushiController/GetParameterValue',
          request_serializer=ParameterIdentifier.SerializeToString,
          response_deserializer=GenericFloatValue.FromString,
          )
      self.GetParameterValueNormalised = channel.unary_unary(
          '/sushi_rpc.SushiController/GetParameterValueNormalised',
          request_serializer=ParameterIdentifier.SerializeToString,
          response_deserializer=GenericFloatValue.FromString,
          )
      self.GetParameterValueAsString = channel.unary_unary(
          '/sushi_rpc.SushiController/GetParameterValueAsString',
          request_serializer=ParameterIdentifier.SerializeToString,
          response_deserializer=GenericStringValue.FromString,
          )
      self.GetStringPropertyValue = channel.unary_unary(
          '/sushi_rpc.SushiController/GetStringPropertyValue',
          request_serializer=ParameterIdentifier.SerializeToString,
          response_deserializer=GenericStringValue.FromString,
          )
      self.SetParameterValue = channel.unary_unary(
          '/sushi_rpc.SushiController/SetParameterValue',
          request_serializer=ParameterSetRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SetParameterValueNormalised = channel.unary_unary(
          '/sushi_rpc.SushiController/SetParameterValueNormalised',
          request_serializer=ParameterSetRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )
      self.SetStringPropertyValue = channel.unary_unary(
          '/sushi_rpc.SushiController/SetStringPropertyValue',
          request_serializer=StringPropertySetRequest.SerializeToString,
          response_deserializer=GenericVoidValue.FromString,
          )


  class SushiControllerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetSamplerate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetPlayingMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetPlayingMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetSyncMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetSyncMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTempo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetTempo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTimeSignature(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetTimeSignature(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTracks(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendNoteOn(self, request, context):
      """Keyboard control
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendNoteOff(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendNoteAftertouch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendAftertouch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendPitchBend(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendModulation(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetEngineTimings(self, request, context):
      """Cpu timings
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTrackTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ResetAllTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ResetTrackTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ResetProcessorTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTrackId(self, request, context):
      """Track control
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTrackInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTrackProcessors(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTrackParameters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorId(self, request, context):
      """Processor control
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorBypassState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetProcessorBypassState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorCurrentProgram(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorCurrentProgramName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorProgramName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorPrograms(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetProcessorProgram(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetProcessorParameters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParameterId(self, request, context):
      """Parameter control
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParameterInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParameterValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParameterValueNormalised(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParameterValueAsString(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetStringPropertyValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetParameterValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetParameterValueNormalised(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetStringPropertyValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SushiControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetSamplerate': grpc.unary_unary_rpc_method_handler(
            servicer.GetSamplerate,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=GenericFloatValue.SerializeToString,
        ),
        'GetPlayingMode': grpc.unary_unary_rpc_method_handler(
            servicer.GetPlayingMode,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=PlayingMode.SerializeToString,
        ),
        'SetPlayingMode': grpc.unary_unary_rpc_method_handler(
            servicer.SetPlayingMode,
            request_deserializer=PlayingMode.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetSyncMode': grpc.unary_unary_rpc_method_handler(
            servicer.GetSyncMode,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=SyncMode.SerializeToString,
        ),
        'SetSyncMode': grpc.unary_unary_rpc_method_handler(
            servicer.SetSyncMode,
            request_deserializer=SyncMode.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetTempo': grpc.unary_unary_rpc_method_handler(
            servicer.GetTempo,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=GenericFloatValue.SerializeToString,
        ),
        'SetTempo': grpc.unary_unary_rpc_method_handler(
            servicer.SetTempo,
            request_deserializer=GenericFloatValue.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetTimeSignature': grpc.unary_unary_rpc_method_handler(
            servicer.GetTimeSignature,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=TimeSignature.SerializeToString,
        ),
        'SetTimeSignature': grpc.unary_unary_rpc_method_handler(
            servicer.SetTimeSignature,
            request_deserializer=TimeSignature.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetTracks': grpc.unary_unary_rpc_method_handler(
            servicer.GetTracks,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=TrackInfoList.SerializeToString,
        ),
        'SendNoteOn': grpc.unary_unary_rpc_method_handler(
            servicer.SendNoteOn,
            request_deserializer=NoteOnRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SendNoteOff': grpc.unary_unary_rpc_method_handler(
            servicer.SendNoteOff,
            request_deserializer=NoteOffRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SendNoteAftertouch': grpc.unary_unary_rpc_method_handler(
            servicer.SendNoteAftertouch,
            request_deserializer=NoteAftertouchRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SendAftertouch': grpc.unary_unary_rpc_method_handler(
            servicer.SendAftertouch,
            request_deserializer=NoteModulationRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SendPitchBend': grpc.unary_unary_rpc_method_handler(
            servicer.SendPitchBend,
            request_deserializer=NoteModulationRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SendModulation': grpc.unary_unary_rpc_method_handler(
            servicer.SendModulation,
            request_deserializer=NoteModulationRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetEngineTimings': grpc.unary_unary_rpc_method_handler(
            servicer.GetEngineTimings,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=CpuTimings.SerializeToString,
        ),
        'GetTrackTimings': grpc.unary_unary_rpc_method_handler(
            servicer.GetTrackTimings,
            request_deserializer=TrackIdentifier.FromString,
            response_serializer=CpuTimings.SerializeToString,
        ),
        'GetProcessorTimings': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorTimings,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=CpuTimings.SerializeToString,
        ),
        'ResetAllTimings': grpc.unary_unary_rpc_method_handler(
            servicer.ResetAllTimings,
            request_deserializer=GenericVoidValue.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'ResetTrackTimings': grpc.unary_unary_rpc_method_handler(
            servicer.ResetTrackTimings,
            request_deserializer=TrackIdentifier.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'ResetProcessorTimings': grpc.unary_unary_rpc_method_handler(
            servicer.ResetProcessorTimings,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetTrackId': grpc.unary_unary_rpc_method_handler(
            servicer.GetTrackId,
            request_deserializer=GenericStringValue.FromString,
            response_serializer=TrackIdentifier.SerializeToString,
        ),
        'GetTrackInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetTrackInfo,
            request_deserializer=TrackIdentifier.FromString,
            response_serializer=TrackInfo.SerializeToString,
        ),
        'GetTrackProcessors': grpc.unary_unary_rpc_method_handler(
            servicer.GetTrackProcessors,
            request_deserializer=TrackIdentifier.FromString,
            response_serializer=ProcessorInfoList.SerializeToString,
        ),
        'GetTrackParameters': grpc.unary_unary_rpc_method_handler(
            servicer.GetTrackParameters,
            request_deserializer=TrackIdentifier.FromString,
            response_serializer=ParameterInfoList.SerializeToString,
        ),
        'GetProcessorId': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorId,
            request_deserializer=GenericStringValue.FromString,
            response_serializer=ProcessorIdentifier.SerializeToString,
        ),
        'GetProcessorInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorInfo,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=ProcessorInfo.SerializeToString,
        ),
        'GetProcessorBypassState': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorBypassState,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=GenericBoolValue.SerializeToString,
        ),
        'SetProcessorBypassState': grpc.unary_unary_rpc_method_handler(
            servicer.SetProcessorBypassState,
            request_deserializer=ProcessorBypassStateSetRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetProcessorCurrentProgram': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorCurrentProgram,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=ProgramIdentifier.SerializeToString,
        ),
        'GetProcessorCurrentProgramName': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorCurrentProgramName,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=GenericStringValue.SerializeToString,
        ),
        'GetProcessorProgramName': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorProgramName,
            request_deserializer=ProcessorProgramIdentifier.FromString,
            response_serializer=GenericStringValue.SerializeToString,
        ),
        'GetProcessorPrograms': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorPrograms,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=ProgramInfoList.SerializeToString,
        ),
        'SetProcessorProgram': grpc.unary_unary_rpc_method_handler(
            servicer.SetProcessorProgram,
            request_deserializer=ProcessorProgramSetRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'GetProcessorParameters': grpc.unary_unary_rpc_method_handler(
            servicer.GetProcessorParameters,
            request_deserializer=ProcessorIdentifier.FromString,
            response_serializer=ParameterInfoList.SerializeToString,
        ),
        'GetParameterId': grpc.unary_unary_rpc_method_handler(
            servicer.GetParameterId,
            request_deserializer=ParameterIdRequest.FromString,
            response_serializer=ParameterIdentifier.SerializeToString,
        ),
        'GetParameterInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetParameterInfo,
            request_deserializer=ParameterIdentifier.FromString,
            response_serializer=ParameterInfo.SerializeToString,
        ),
        'GetParameterValue': grpc.unary_unary_rpc_method_handler(
            servicer.GetParameterValue,
            request_deserializer=ParameterIdentifier.FromString,
            response_serializer=GenericFloatValue.SerializeToString,
        ),
        'GetParameterValueNormalised': grpc.unary_unary_rpc_method_handler(
            servicer.GetParameterValueNormalised,
            request_deserializer=ParameterIdentifier.FromString,
            response_serializer=GenericFloatValue.SerializeToString,
        ),
        'GetParameterValueAsString': grpc.unary_unary_rpc_method_handler(
            servicer.GetParameterValueAsString,
            request_deserializer=ParameterIdentifier.FromString,
            response_serializer=GenericStringValue.SerializeToString,
        ),
        'GetStringPropertyValue': grpc.unary_unary_rpc_method_handler(
            servicer.GetStringPropertyValue,
            request_deserializer=ParameterIdentifier.FromString,
            response_serializer=GenericStringValue.SerializeToString,
        ),
        'SetParameterValue': grpc.unary_unary_rpc_method_handler(
            servicer.SetParameterValue,
            request_deserializer=ParameterSetRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SetParameterValueNormalised': grpc.unary_unary_rpc_method_handler(
            servicer.SetParameterValueNormalised,
            request_deserializer=ParameterSetRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
        'SetStringPropertyValue': grpc.unary_unary_rpc_method_handler(
            servicer.SetStringPropertyValue,
            request_deserializer=StringPropertySetRequest.FromString,
            response_serializer=GenericVoidValue.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sushi_rpc.SushiController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSushiControllerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetSamplerate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetPlayingMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetPlayingMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetSyncMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetSyncMode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTempo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetTempo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTimeSignature(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetTimeSignature(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTracks(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendNoteOn(self, request, context):
      """Keyboard control
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendNoteOff(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendNoteAftertouch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendAftertouch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendPitchBend(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendModulation(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetEngineTimings(self, request, context):
      """Cpu timings
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTrackTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ResetAllTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ResetTrackTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ResetProcessorTimings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTrackId(self, request, context):
      """Track control
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTrackInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTrackProcessors(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTrackParameters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorId(self, request, context):
      """Processor control
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorBypassState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetProcessorBypassState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorCurrentProgram(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorCurrentProgramName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorProgramName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorPrograms(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetProcessorProgram(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetProcessorParameters(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParameterId(self, request, context):
      """Parameter control
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParameterInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParameterValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParameterValueNormalised(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParameterValueAsString(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetStringPropertyValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetParameterValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetParameterValueNormalised(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetStringPropertyValue(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSushiControllerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetSamplerate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetSamplerate.future = None
    def GetPlayingMode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetPlayingMode.future = None
    def SetPlayingMode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetPlayingMode.future = None
    def GetSyncMode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetSyncMode.future = None
    def SetSyncMode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetSyncMode.future = None
    def GetTempo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTempo.future = None
    def SetTempo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetTempo.future = None
    def GetTimeSignature(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTimeSignature.future = None
    def SetTimeSignature(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetTimeSignature.future = None
    def GetTracks(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTracks.future = None
    def SendNoteOn(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Keyboard control
      """
      raise NotImplementedError()
    SendNoteOn.future = None
    def SendNoteOff(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendNoteOff.future = None
    def SendNoteAftertouch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendNoteAftertouch.future = None
    def SendAftertouch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendAftertouch.future = None
    def SendPitchBend(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendPitchBend.future = None
    def SendModulation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendModulation.future = None
    def GetEngineTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Cpu timings
      """
      raise NotImplementedError()
    GetEngineTimings.future = None
    def GetTrackTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTrackTimings.future = None
    def GetProcessorTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorTimings.future = None
    def ResetAllTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ResetAllTimings.future = None
    def ResetTrackTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ResetTrackTimings.future = None
    def ResetProcessorTimings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ResetProcessorTimings.future = None
    def GetTrackId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Track control
      """
      raise NotImplementedError()
    GetTrackId.future = None
    def GetTrackInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTrackInfo.future = None
    def GetTrackProcessors(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTrackProcessors.future = None
    def GetTrackParameters(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTrackParameters.future = None
    def GetProcessorId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Processor control
      """
      raise NotImplementedError()
    GetProcessorId.future = None
    def GetProcessorInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorInfo.future = None
    def GetProcessorBypassState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorBypassState.future = None
    def SetProcessorBypassState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetProcessorBypassState.future = None
    def GetProcessorCurrentProgram(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorCurrentProgram.future = None
    def GetProcessorCurrentProgramName(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorCurrentProgramName.future = None
    def GetProcessorProgramName(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorProgramName.future = None
    def GetProcessorPrograms(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorPrograms.future = None
    def SetProcessorProgram(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetProcessorProgram.future = None
    def GetProcessorParameters(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetProcessorParameters.future = None
    def GetParameterId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Parameter control
      """
      raise NotImplementedError()
    GetParameterId.future = None
    def GetParameterInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetParameterInfo.future = None
    def GetParameterValue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetParameterValue.future = None
    def GetParameterValueNormalised(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetParameterValueNormalised.future = None
    def GetParameterValueAsString(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetParameterValueAsString.future = None
    def GetStringPropertyValue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetStringPropertyValue.future = None
    def SetParameterValue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetParameterValue.future = None
    def SetParameterValueNormalised(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetParameterValueNormalised.future = None
    def SetStringPropertyValue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetStringPropertyValue.future = None


  def beta_create_SushiController_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('sushi_rpc.SushiController', 'GetEngineTimings'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetParameterId'): ParameterIdRequest.FromString,
      ('sushi_rpc.SushiController', 'GetParameterInfo'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValue'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValueAsString'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValueNormalised'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetPlayingMode'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorBypassState'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgram'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgramName'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorId'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorInfo'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorParameters'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorProgramName'): ProcessorProgramIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorPrograms'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorTimings'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetSamplerate'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetStringPropertyValue'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetSyncMode'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetTempo'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetTimeSignature'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'GetTrackId'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetTrackInfo'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetTrackParameters'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetTrackProcessors'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetTrackTimings'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetTracks'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'ResetAllTimings'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'ResetProcessorTimings'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'ResetTrackTimings'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'SendAftertouch'): NoteModulationRequest.FromString,
      ('sushi_rpc.SushiController', 'SendModulation'): NoteModulationRequest.FromString,
      ('sushi_rpc.SushiController', 'SendNoteAftertouch'): NoteAftertouchRequest.FromString,
      ('sushi_rpc.SushiController', 'SendNoteOff'): NoteOffRequest.FromString,
      ('sushi_rpc.SushiController', 'SendNoteOn'): NoteOnRequest.FromString,
      ('sushi_rpc.SushiController', 'SendPitchBend'): NoteModulationRequest.FromString,
      ('sushi_rpc.SushiController', 'SetParameterValue'): ParameterSetRequest.FromString,
      ('sushi_rpc.SushiController', 'SetParameterValueNormalised'): ParameterSetRequest.FromString,
      ('sushi_rpc.SushiController', 'SetPlayingMode'): PlayingMode.FromString,
      ('sushi_rpc.SushiController', 'SetProcessorBypassState'): ProcessorBypassStateSetRequest.FromString,
      ('sushi_rpc.SushiController', 'SetProcessorProgram'): ProcessorProgramSetRequest.FromString,
      ('sushi_rpc.SushiController', 'SetStringPropertyValue'): StringPropertySetRequest.FromString,
      ('sushi_rpc.SushiController', 'SetSyncMode'): SyncMode.FromString,
      ('sushi_rpc.SushiController', 'SetTempo'): GenericFloatValue.FromString,
      ('sushi_rpc.SushiController', 'SetTimeSignature'): TimeSignature.FromString,
    }
    response_serializers = {
      ('sushi_rpc.SushiController', 'GetEngineTimings'): CpuTimings.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterId'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterInfo'): ParameterInfo.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValue'): GenericFloatValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValueAsString'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValueNormalised'): GenericFloatValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetPlayingMode'): PlayingMode.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorBypassState'): GenericBoolValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgram'): ProgramIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgramName'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorId'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorInfo'): ProcessorInfo.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorParameters'): ParameterInfoList.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorProgramName'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorPrograms'): ProgramInfoList.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorTimings'): CpuTimings.SerializeToString,
      ('sushi_rpc.SushiController', 'GetSamplerate'): GenericFloatValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetStringPropertyValue'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetSyncMode'): SyncMode.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTempo'): GenericFloatValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTimeSignature'): TimeSignature.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackId'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackInfo'): TrackInfo.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackParameters'): ParameterInfoList.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackProcessors'): ProcessorInfoList.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackTimings'): CpuTimings.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTracks'): TrackInfoList.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetAllTimings'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetProcessorTimings'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetTrackTimings'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendAftertouch'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendModulation'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteAftertouch'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteOff'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteOn'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SendPitchBend'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetParameterValue'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetParameterValueNormalised'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetPlayingMode'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetProcessorBypassState'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetProcessorProgram'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetStringPropertyValue'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetSyncMode'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetTempo'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetTimeSignature'): GenericVoidValue.SerializeToString,
    }
    method_implementations = {
      ('sushi_rpc.SushiController', 'GetEngineTimings'): face_utilities.unary_unary_inline(servicer.GetEngineTimings),
      ('sushi_rpc.SushiController', 'GetParameterId'): face_utilities.unary_unary_inline(servicer.GetParameterId),
      ('sushi_rpc.SushiController', 'GetParameterInfo'): face_utilities.unary_unary_inline(servicer.GetParameterInfo),
      ('sushi_rpc.SushiController', 'GetParameterValue'): face_utilities.unary_unary_inline(servicer.GetParameterValue),
      ('sushi_rpc.SushiController', 'GetParameterValueAsString'): face_utilities.unary_unary_inline(servicer.GetParameterValueAsString),
      ('sushi_rpc.SushiController', 'GetParameterValueNormalised'): face_utilities.unary_unary_inline(servicer.GetParameterValueNormalised),
      ('sushi_rpc.SushiController', 'GetPlayingMode'): face_utilities.unary_unary_inline(servicer.GetPlayingMode),
      ('sushi_rpc.SushiController', 'GetProcessorBypassState'): face_utilities.unary_unary_inline(servicer.GetProcessorBypassState),
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgram'): face_utilities.unary_unary_inline(servicer.GetProcessorCurrentProgram),
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgramName'): face_utilities.unary_unary_inline(servicer.GetProcessorCurrentProgramName),
      ('sushi_rpc.SushiController', 'GetProcessorId'): face_utilities.unary_unary_inline(servicer.GetProcessorId),
      ('sushi_rpc.SushiController', 'GetProcessorInfo'): face_utilities.unary_unary_inline(servicer.GetProcessorInfo),
      ('sushi_rpc.SushiController', 'GetProcessorParameters'): face_utilities.unary_unary_inline(servicer.GetProcessorParameters),
      ('sushi_rpc.SushiController', 'GetProcessorProgramName'): face_utilities.unary_unary_inline(servicer.GetProcessorProgramName),
      ('sushi_rpc.SushiController', 'GetProcessorPrograms'): face_utilities.unary_unary_inline(servicer.GetProcessorPrograms),
      ('sushi_rpc.SushiController', 'GetProcessorTimings'): face_utilities.unary_unary_inline(servicer.GetProcessorTimings),
      ('sushi_rpc.SushiController', 'GetSamplerate'): face_utilities.unary_unary_inline(servicer.GetSamplerate),
      ('sushi_rpc.SushiController', 'GetStringPropertyValue'): face_utilities.unary_unary_inline(servicer.GetStringPropertyValue),
      ('sushi_rpc.SushiController', 'GetSyncMode'): face_utilities.unary_unary_inline(servicer.GetSyncMode),
      ('sushi_rpc.SushiController', 'GetTempo'): face_utilities.unary_unary_inline(servicer.GetTempo),
      ('sushi_rpc.SushiController', 'GetTimeSignature'): face_utilities.unary_unary_inline(servicer.GetTimeSignature),
      ('sushi_rpc.SushiController', 'GetTrackId'): face_utilities.unary_unary_inline(servicer.GetTrackId),
      ('sushi_rpc.SushiController', 'GetTrackInfo'): face_utilities.unary_unary_inline(servicer.GetTrackInfo),
      ('sushi_rpc.SushiController', 'GetTrackParameters'): face_utilities.unary_unary_inline(servicer.GetTrackParameters),
      ('sushi_rpc.SushiController', 'GetTrackProcessors'): face_utilities.unary_unary_inline(servicer.GetTrackProcessors),
      ('sushi_rpc.SushiController', 'GetTrackTimings'): face_utilities.unary_unary_inline(servicer.GetTrackTimings),
      ('sushi_rpc.SushiController', 'GetTracks'): face_utilities.unary_unary_inline(servicer.GetTracks),
      ('sushi_rpc.SushiController', 'ResetAllTimings'): face_utilities.unary_unary_inline(servicer.ResetAllTimings),
      ('sushi_rpc.SushiController', 'ResetProcessorTimings'): face_utilities.unary_unary_inline(servicer.ResetProcessorTimings),
      ('sushi_rpc.SushiController', 'ResetTrackTimings'): face_utilities.unary_unary_inline(servicer.ResetTrackTimings),
      ('sushi_rpc.SushiController', 'SendAftertouch'): face_utilities.unary_unary_inline(servicer.SendAftertouch),
      ('sushi_rpc.SushiController', 'SendModulation'): face_utilities.unary_unary_inline(servicer.SendModulation),
      ('sushi_rpc.SushiController', 'SendNoteAftertouch'): face_utilities.unary_unary_inline(servicer.SendNoteAftertouch),
      ('sushi_rpc.SushiController', 'SendNoteOff'): face_utilities.unary_unary_inline(servicer.SendNoteOff),
      ('sushi_rpc.SushiController', 'SendNoteOn'): face_utilities.unary_unary_inline(servicer.SendNoteOn),
      ('sushi_rpc.SushiController', 'SendPitchBend'): face_utilities.unary_unary_inline(servicer.SendPitchBend),
      ('sushi_rpc.SushiController', 'SetParameterValue'): face_utilities.unary_unary_inline(servicer.SetParameterValue),
      ('sushi_rpc.SushiController', 'SetParameterValueNormalised'): face_utilities.unary_unary_inline(servicer.SetParameterValueNormalised),
      ('sushi_rpc.SushiController', 'SetPlayingMode'): face_utilities.unary_unary_inline(servicer.SetPlayingMode),
      ('sushi_rpc.SushiController', 'SetProcessorBypassState'): face_utilities.unary_unary_inline(servicer.SetProcessorBypassState),
      ('sushi_rpc.SushiController', 'SetProcessorProgram'): face_utilities.unary_unary_inline(servicer.SetProcessorProgram),
      ('sushi_rpc.SushiController', 'SetStringPropertyValue'): face_utilities.unary_unary_inline(servicer.SetStringPropertyValue),
      ('sushi_rpc.SushiController', 'SetSyncMode'): face_utilities.unary_unary_inline(servicer.SetSyncMode),
      ('sushi_rpc.SushiController', 'SetTempo'): face_utilities.unary_unary_inline(servicer.SetTempo),
      ('sushi_rpc.SushiController', 'SetTimeSignature'): face_utilities.unary_unary_inline(servicer.SetTimeSignature),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SushiController_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('sushi_rpc.SushiController', 'GetEngineTimings'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterId'): ParameterIdRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterInfo'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValue'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValueAsString'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetParameterValueNormalised'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetPlayingMode'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorBypassState'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgram'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgramName'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorId'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorInfo'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorParameters'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorProgramName'): ProcessorProgramIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorPrograms'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetProcessorTimings'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetSamplerate'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetStringPropertyValue'): ParameterIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetSyncMode'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTempo'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTimeSignature'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackId'): GenericStringValue.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackInfo'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackParameters'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackProcessors'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTrackTimings'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'GetTracks'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetAllTimings'): GenericVoidValue.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetProcessorTimings'): ProcessorIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'ResetTrackTimings'): TrackIdentifier.SerializeToString,
      ('sushi_rpc.SushiController', 'SendAftertouch'): NoteModulationRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SendModulation'): NoteModulationRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteAftertouch'): NoteAftertouchRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteOff'): NoteOffRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SendNoteOn'): NoteOnRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SendPitchBend'): NoteModulationRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetParameterValue'): ParameterSetRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetParameterValueNormalised'): ParameterSetRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetPlayingMode'): PlayingMode.SerializeToString,
      ('sushi_rpc.SushiController', 'SetProcessorBypassState'): ProcessorBypassStateSetRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetProcessorProgram'): ProcessorProgramSetRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetStringPropertyValue'): StringPropertySetRequest.SerializeToString,
      ('sushi_rpc.SushiController', 'SetSyncMode'): SyncMode.SerializeToString,
      ('sushi_rpc.SushiController', 'SetTempo'): GenericFloatValue.SerializeToString,
      ('sushi_rpc.SushiController', 'SetTimeSignature'): TimeSignature.SerializeToString,
    }
    response_deserializers = {
      ('sushi_rpc.SushiController', 'GetEngineTimings'): CpuTimings.FromString,
      ('sushi_rpc.SushiController', 'GetParameterId'): ParameterIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetParameterInfo'): ParameterInfo.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValue'): GenericFloatValue.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValueAsString'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetParameterValueNormalised'): GenericFloatValue.FromString,
      ('sushi_rpc.SushiController', 'GetPlayingMode'): PlayingMode.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorBypassState'): GenericBoolValue.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgram'): ProgramIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorCurrentProgramName'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorId'): ProcessorIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorInfo'): ProcessorInfo.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorParameters'): ParameterInfoList.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorProgramName'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorPrograms'): ProgramInfoList.FromString,
      ('sushi_rpc.SushiController', 'GetProcessorTimings'): CpuTimings.FromString,
      ('sushi_rpc.SushiController', 'GetSamplerate'): GenericFloatValue.FromString,
      ('sushi_rpc.SushiController', 'GetStringPropertyValue'): GenericStringValue.FromString,
      ('sushi_rpc.SushiController', 'GetSyncMode'): SyncMode.FromString,
      ('sushi_rpc.SushiController', 'GetTempo'): GenericFloatValue.FromString,
      ('sushi_rpc.SushiController', 'GetTimeSignature'): TimeSignature.FromString,
      ('sushi_rpc.SushiController', 'GetTrackId'): TrackIdentifier.FromString,
      ('sushi_rpc.SushiController', 'GetTrackInfo'): TrackInfo.FromString,
      ('sushi_rpc.SushiController', 'GetTrackParameters'): ParameterInfoList.FromString,
      ('sushi_rpc.SushiController', 'GetTrackProcessors'): ProcessorInfoList.FromString,
      ('sushi_rpc.SushiController', 'GetTrackTimings'): CpuTimings.FromString,
      ('sushi_rpc.SushiController', 'GetTracks'): TrackInfoList.FromString,
      ('sushi_rpc.SushiController', 'ResetAllTimings'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'ResetProcessorTimings'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'ResetTrackTimings'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendAftertouch'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendModulation'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendNoteAftertouch'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendNoteOff'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendNoteOn'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SendPitchBend'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetParameterValue'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetParameterValueNormalised'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetPlayingMode'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetProcessorBypassState'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetProcessorProgram'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetStringPropertyValue'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetSyncMode'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetTempo'): GenericVoidValue.FromString,
      ('sushi_rpc.SushiController', 'SetTimeSignature'): GenericVoidValue.FromString,
    }
    cardinalities = {
      'GetEngineTimings': cardinality.Cardinality.UNARY_UNARY,
      'GetParameterId': cardinality.Cardinality.UNARY_UNARY,
      'GetParameterInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetParameterValue': cardinality.Cardinality.UNARY_UNARY,
      'GetParameterValueAsString': cardinality.Cardinality.UNARY_UNARY,
      'GetParameterValueNormalised': cardinality.Cardinality.UNARY_UNARY,
      'GetPlayingMode': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorBypassState': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorCurrentProgram': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorCurrentProgramName': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorId': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorParameters': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorProgramName': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorPrograms': cardinality.Cardinality.UNARY_UNARY,
      'GetProcessorTimings': cardinality.Cardinality.UNARY_UNARY,
      'GetSamplerate': cardinality.Cardinality.UNARY_UNARY,
      'GetStringPropertyValue': cardinality.Cardinality.UNARY_UNARY,
      'GetSyncMode': cardinality.Cardinality.UNARY_UNARY,
      'GetTempo': cardinality.Cardinality.UNARY_UNARY,
      'GetTimeSignature': cardinality.Cardinality.UNARY_UNARY,
      'GetTrackId': cardinality.Cardinality.UNARY_UNARY,
      'GetTrackInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetTrackParameters': cardinality.Cardinality.UNARY_UNARY,
      'GetTrackProcessors': cardinality.Cardinality.UNARY_UNARY,
      'GetTrackTimings': cardinality.Cardinality.UNARY_UNARY,
      'GetTracks': cardinality.Cardinality.UNARY_UNARY,
      'ResetAllTimings': cardinality.Cardinality.UNARY_UNARY,
      'ResetProcessorTimings': cardinality.Cardinality.UNARY_UNARY,
      'ResetTrackTimings': cardinality.Cardinality.UNARY_UNARY,
      'SendAftertouch': cardinality.Cardinality.UNARY_UNARY,
      'SendModulation': cardinality.Cardinality.UNARY_UNARY,
      'SendNoteAftertouch': cardinality.Cardinality.UNARY_UNARY,
      'SendNoteOff': cardinality.Cardinality.UNARY_UNARY,
      'SendNoteOn': cardinality.Cardinality.UNARY_UNARY,
      'SendPitchBend': cardinality.Cardinality.UNARY_UNARY,
      'SetParameterValue': cardinality.Cardinality.UNARY_UNARY,
      'SetParameterValueNormalised': cardinality.Cardinality.UNARY_UNARY,
      'SetPlayingMode': cardinality.Cardinality.UNARY_UNARY,
      'SetProcessorBypassState': cardinality.Cardinality.UNARY_UNARY,
      'SetProcessorProgram': cardinality.Cardinality.UNARY_UNARY,
      'SetStringPropertyValue': cardinality.Cardinality.UNARY_UNARY,
      'SetSyncMode': cardinality.Cardinality.UNARY_UNARY,
      'SetTempo': cardinality.Cardinality.UNARY_UNARY,
      'SetTimeSignature': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'sushi_rpc.SushiController', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
